{% extends "::base.html.twig" %}

{% block title %}Game Setup - {% endblock %}

{% block body %}
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.0/jquery-ui.min.js"></script>

    <script>
        $(function () {
            $("#landGrant").selectmenu({
                change: function (event, ui) {
                    alert('x');
                }
            });
        });
    </script>

    {% spaceless %}
        {# Page Title #}
        <div style="width: 100%; font-family: Orbitron; font-size: 1em; font-weight: bold; text-align: center;">
            The Game - Setup
        </div>
        {# Page Body #}
        {# Map Area #}
        <div id="maparea">
            {# Mini Map Section #}
            <div id="minimapsection">
                <div id="miniMap"></div>
                <div id="minimapdisplay">
                    <div class="infobox">
                        <p class="UYBGFont_075em_AlignCenter" style="margin-bottom: 2px;">Mar's Land Grant</p>
                        <select name="landGrant" id="landGrant" class="UYBGFont_1em" style="margin-left: 8px;">
                            {% for mapName in mapNameList %}
                                <option>{{ mapName }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="infobox">
                        <p class="UYBGFont_075em_AlignCenter">Sector Selected</p>
                        <p id="selectedSector" class="UYBGFont_075em_AlignCenter"></p>
                    </div>
                </div>
                <div id="minimapinstruction" class="divborder">
                    <p class="UYBGFont_075em" style="margin: 2px 4px 2px 4px;">Instructions go here</p>
                </div>
            </div>
            {# Main Map Section #}
            <div id="mainmapsection">
                <div id="mainMap" style="display: inline; white-space: nowrap;"></div>
            </div>
        </div>
        {# Map Configuration Area #}
        <div id="toolbarsection" class="divborder">
            <div style="width: 150px;">
                <p class="UYBGFont_075em" style="margin: .5em 0em .5em 1em;">Quick Links</p>
                <ul>
                    <li style="margin: 5px 0px 0px 0px;">
                        <a class="UYBGFont_075em" style="margin-left: .25em" href="{{ path('crud_maps_index') }}">List
                            of Maps</a>
                    </li>
                    <li style="margin: 5px 0px 0px 0px;">
                        <a class="UYBGFont_075em" style="margin-left: .25em" href="{{ path('crud_tiles_index') }}">List
                            of Tiles</a>
                    </li>
                </ul>
            </div>
            {#<div style="height: 50px; border-style: solid; border-color: green"></div>#}
            {#<div style="height: 50px; border-style: solid; border-color: green"></div>#}
            {#<div style="height: 50px; border-style: solid; border-color: green"></div>#}
            {#<div style="height: 50px; border-style: solid; border-color: green"></div>#}
            {#<div style="height: 50px; border-style: solid; border-color: green"></div>#}
            {#<div style="height: 50px; border-style: solid; border-color: green"></div>#}
            {#<div style="height: 50px; border-style: solid; border-color: green"></div>#}
        </div>

        <script>

            var miniWidth = 375, miniHeight = 175, borderWidth = 10, displayBorderColor = "#50a8d5", gridWidth = 25;
            var myMiniMap = new MiniMap();
            myMiniMap.buildMiniMapGrid(miniWidth / gridWidth, miniHeight / gridWidth);
            //
            var myMainMap = new MainMap();
            myMainMap.performAction("init");

            function MiniMap() {

                //Create miniMapSVG
                var miniMapSVG = d3.select("div#miniMap").append("svg")
                        .attr("width", miniWidth + borderWidth)
                        .attr("height", miniHeight + borderWidth);


                //Create MiniMapBorder
                miniMapSVG.append("rect")
                        .attr("x", "0")
                        .attr("y", "0")
                        .attr("rx", 15)
                        .attr("ry", 15)
                        .attr("width", miniWidth + borderWidth)
                        .attr("height", miniHeight + borderWidth)
                        .attr("fill", "white")
                        .attr("stroke", displayBorderColor)
                        .attr("stroke-width", borderWidth);

                //Load Image into MiniMap
                miniMapSVG.append("image")
                        .attr("xlink:href", "{{ imgLibrary }}/MapMaster-001.jpg")
                        .attr("x", borderWidth / 2)
                        .attr("y", borderWidth / 2)
                        .attr("width", miniWidth)
                        .attr("height", miniHeight);

                //Build the mini Map Grid
                this.buildMiniMapGrid = function (x, y) {
                    for (rectX = 0; rectX < x; rectX++) {
                        for (rectY = 0; rectY < y; rectY++) {
                            var rects = miniMapSVG.append("rect")
                                    .attr("x", rectX * gridWidth + borderWidth / 2)
                                    .attr("y", rectY * gridWidth + borderWidth / 2)
                                    .attr("width", gridWidth)
                                    .attr("height", gridWidth)
                                    .attr("fill", "white")
                                    .style("fill-opacity", 0.0)
                                    .attr("stroke-miniWidth", 1)
                                    .attr("stroke", "antiquewhite")
                                    .attr("id", "mini" + "/" + rectX + "/" + rectY)
                                    .on("click", function () {
                                        var myMainMap = new MainMap();
                                        myMainMap.performAction("main", this.id);
                                    });
                        }
                    }
                }
            }

            function MainMap() {

                if (arguments.callee._singletonInstance) {
                    return arguments.callee._singletonInstance;
                }

                arguments.callee._singletonInstance = this;

                this.performAction = function (action, rectID) {

                    switch (action) {
                        case "init":
                            //Create mainMapSVG and Border
                            var mainMapSVG = this.buildMainSVGBorder();

                            //Load Image into mainMap
                            this.buildMainImage(mainMapSVG, "{{ imgLibrary }}/DisplaySnow-blue.gif");

                            //Load text on display snow
                            mainMapSVG.append("text").text("Click on a the mini map to zoom in on a sector.")
                                    .attr("x", "25")
                                    .attr("y", "25")
                                    .attr("font-family", "Orbitron")
                                    .attr("font-size", "1em")
                                    .attr("fill", "black");
                            break;
                        case "main":
                            var xy = rectID.split("/");

                            var mySelectedSector = document.getElementById("selectedSector");
                            mySelectedSector.innerText = "Col: " + xy[1] + " / Row: " + xy[2];

                            //Replace HTML Div Main Map
                            d3.select("div#mainMap").remove();
                            var div = document.createElement("div");
                            div.id = "mainMap";
                            div.style = "display: inline; white-space: nowrap;";
                            document.getElementById("mainmapsection").appendChild(div);

                            //Create mainMapSVG and Border
                            var mainMapSVG = this.buildMainSVGBorder();

                            //Load Image into mainMap
                            this.buildMainImage(mainMapSVG, "{{ imgLibrary }}/MapsMaster-001-" + xy[1] + "-" + xy[2] + ".jpg");

                            //Build Main Map Grid
                            this.buildMainGrid(mainMapSVG);
                            break;
                        default:
                            alert("MainMap has been called with invalid action. [" + action + "]")
                    }
                };

                this.buildMainSVGBorder = function () {
                    //Create mainMapSVG
                    var mainMapSVG = d3.select("div#mainMap").append("svg")
                            .attr("width", 500 + borderWidth)
                            .attr("height", 500 + borderWidth)
                            .attr("id", "mainMapSVG");
                    //Create MainMapBorder
                    mainMapSVG.append("rect")
                            .attr("x", 0)
                            .attr("y", 0)
                            .attr("rx", 15)
                            .attr("ry", 15)
                            .attr("width", 500 + borderWidth)
                            .attr("height", 500 + borderWidth)
                            .attr("fill", "white")
                            .attr("stroke", displayBorderColor)
                            .attr("stroke-width", borderWidth);
                    return mainMapSVG;
                };

                this.buildMainImage = function (mainMapSVG, fileName) {
                    mainMapSVG.append("image")
                            .attr("xlink:href", fileName)
                            .attr("x", borderWidth / 2)
                            .attr("y", borderWidth / 2)
                            .attr("width", 500)
                            .attr("height", 500);
                };

                this.buildMainGrid = function (mainMapSVG) {
                    //Build the Main Map Grid
                    for (rectX = 0; rectX < 20; rectX++) {
                        for (rectY = 0; rectY < 20; rectY++) {
                            var rects = mainMapSVG.append("rect")
                                    .attr("x", rectX * 25 + borderWidth / 2)
                                    .attr("y", rectY * 25 + borderWidth / 2)
                                    .attr("width", 25)
                                    .attr("height", 25)
                                    .style("fill-opacity", 0.0)
                                    .attr("id", "main" + "/" + rectX + "/" + rectY)
                                    .on("click", function () {
                                        var myMainMap = new MainMap();
                                        myMainMap.markAsRestricted(this.id, mainMapSVG);
                                    });
                        }
                    }
                };

                this.markAsRestricted = function (rectID, mainMapSVG) {
                    var xy = rectID.split("/");

                    console.log(document.getElementById(rectID).getAttribute("restricted"));
                    var elem = document.getElementById(rectID);
                    if (elem.getAttribute("restricted") != null) {
                        elem.removeAttribute("stroke", "darkred");
                        elem.removeAttribute("restricted");
                        var elem = document.getElementById("path/" + xy[1] + "/" + xy[2]);
                        elem.parentNode.removeChild(elem);
                    } else {
                        elem.setAttribute("stroke", "darkred");
                        elem.setAttribute("restricted", "yes");
                        mainMapSVG.append("path")
                                .attr("id", "path/" + xy[1] + "/" + xy[2])
                                .attr('d', 'M ' + (xy[1] * 25 + borderWidth / 2) + ' ' + (xy[2] * 25 + borderWidth / 2) + ' l 25 25')
                                .attr('stroke-width', 2)
                                .attr('stroke', 'darkred')
                                .on("click", function () {
                                    var myMainMap = new MainMap();
                                    myMainMap.markAsRestricted(rectID, mainMapSVG);
                                });
                    }
                }
            }

        </script>
    {% endspaceless %}
{% endblock %}